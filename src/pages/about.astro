---
import { authorDTO } from "@application/dto/author";
import type { AuthorDTO, RawAuthor } from "@application/dto/author/types";
import { cityDTO } from "@application/dto/city";
import type { RawCity } from "@application/dto/city/types";
import { CONTACT_DETAILS } from "@const/index";
import { client } from "@infrastructure/cms/client";
import AboutIntro from "@modules/about/components/aboutIntro/AboutIntro.astro";
import AboutLatestArticles from "@modules/about/components/aboutLatestArticles/AboutLatestArticles.astro";
import { LittleMoreOfMe } from "@modules/about/components/littleMoreOfMe/LittleMoreOfMe.tsx";
import BaseLayout from "@modules/core/components/baseLayout/BaseLayout.astro";
import Breadcrumbs from "@modules/core/components/breadcrumbs/Breadcrumbs.astro";

interface AboutFetchData<T> {
	items: T[];
}

const [{ items: rawAuthors }, { items: rawCities }]: [AboutFetchData<RawAuthor>, AboutFetchData<RawCity>] =
	await Promise.all([
		client.getEntries({ content_type: "author" }) as unknown as AboutFetchData<RawAuthor>,
		client.getEntries({
			content_type: "city",
			order: ["fields.startDate"],
		}) as unknown as AboutFetchData<RawCity>,
	]);

const cities = cityDTO.render(rawCities);

const bianca = (await authorDTO.render(rawAuthors as RawAuthor[]))
	.filter((author) => author.name === CONTACT_DETAILS.NAME)
	.at(0) as AuthorDTO;
---

<BaseLayout>
    <Breadcrumbs />
    <AboutIntro />
    <LittleMoreOfMe client:only="react" cities={cities} />
    <AboutLatestArticles />
    <script is:inline type="application/ld+json" set:html={JSON.stringify({
      '@context': 'https://schema.org',
      '@type': 'ProfilePage',
      'mainEntity': {
        '@id': '#bianca',
        '@type': 'Person',
        'name': bianca.name,
        'url': new URL(Astro.url).href,
        'image': new URL(bianca.profileImage.url, Astro.url).href,
        'jobTitle': bianca.jobTitle,
        'worksFor': {
          '@type': 'Organization',
          'name': bianca.currentCompany,
        },
      },
      'hasPart': [
        {
          '@type': 'Article',
          'headline': bianca.latestArticle.title,
          'url': new URL(`articles/${bianca.latestArticle.slug}`, Astro.url).href,
          'datePublished': bianca.latestArticle.publishDate,
          'author': { '@id': '#bianca' },
        }],
      'sameAs': [...bianca.socialNetworks],
    })} />
</BaseLayout>
