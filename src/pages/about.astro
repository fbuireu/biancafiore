---
import type { CollectionEntry } from "astro:content";
import { getCollection, getEntry } from "astro:content";
import { CONTACT_DETAILS, PAGES_ROUTES } from "@const/index";
import type { SeoMetadata } from "@const/types";
import AboutIntro from "@modules/about/components/aboutIntro/AboutIntro.astro";
import AboutLatestArticles from "@modules/about/components/aboutLatestArticles/AboutLatestArticles.astro";
import LittleMoreOfMe from "@modules/about/components/littleMoreOfMe/LittleMoreOfMe.astro";
import BaseLayout from "@modules/core/components/baseLayout/BaseLayout.astro";
import Breadcrumbs from "@modules/core/components/breadcrumbs/Breadcrumbs.astro";

const [cities, authors] = await Promise.all([getCollection("cities"), getCollection("authors")]);

const author = authors
	.filter((author) => author.data.name === CONTACT_DETAILS.NAME)
	.at(0) as CollectionEntry<"authors">;

const bianca = {
	...author,
	data: {
		...author.data,
		...(author.data.latestArticle && {
			latestArticle: await getEntry(author.data.latestArticle.collection, author.data.latestArticle.id),
		}),
	},
};
const metadata: Partial<SeoMetadata> = {
	title: "About me",
};
---
<BaseLayout {...metadata}>
    <Breadcrumbs />
    <AboutIntro />
    <LittleMoreOfMe cities={cities} />
    <AboutLatestArticles />
    <script is:inline type="application/ld+json" set:html={JSON.stringify({
      '@context': 'https://schema.org',
      '@type': 'ProfilePage',
      'mainEntity': {
        '@id': '#bianca',
        '@type': 'Person',
        'name': bianca.data.name,
        'url': new URL(Astro.url).href,
        'image': new URL(bianca.data.profileImage.url, Astro.url).href,
        'jobTitle': bianca.data.jobTitle,
        'worksFor': {
          '@type': 'Organization',
          'name': bianca.data.currentCompany,
        },
      },
        ...(bianca.data.latestArticle &&{
          'hasPart': [
            {
              '@type': 'Article',
              'headline': (bianca.data.latestArticle as CollectionEntry<"articles">).data.title,
              'url': new URL(`${PAGES_ROUTES.ARTICLES}/${(bianca.data.latestArticle as CollectionEntry<"articles">).data.slug}`, Astro.url).href,
              'datePublished': (bianca.data.latestArticle as CollectionEntry<"articles">).data.publishDate,
              'author': { '@id': '#bianca' },
            }],
        }),
      'sameAs': [...bianca.data.socialNetworks],
    })} />
</BaseLayout>
