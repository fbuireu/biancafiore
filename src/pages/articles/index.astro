---
import { articleDTO } from "@application/dto/article/articleDTO";
import type { RawArticle } from "@application/dto/article/types";
import { client } from "@infrastructure/cms/client";
import FeaturedArticle from "@modules/articles/components/featuredArticle/FeaturedArticle.astro";
import ArticleCard from "@modules/core/components/articleCard/ArticleCard.astro";
import BaseLayout from "@modules/core/components/baseLayout/BaseLayout.astro";
import Breadcrumbs from "@modules/core/components/breadcrumbs/Breadcrumbs.astro";
import { getFeaturedArticle } from "@modules/core/utils/getFeaturedArticle";
import "./_articles.css";

const { items: rawArticles } = await client.getEntries<RawArticle>({
	content_type: "article",
	order: ["-fields.publishDate"],
});

const articles = articleDTO.render(rawArticles as unknown as RawArticle[]);

const featuredArticle = getFeaturedArticle(articles);
---

<BaseLayout>
    <h1 class="articles__title section-title">The Blog</h1>
    <Breadcrumbs />
    <FeaturedArticle featuredArticle={featuredArticle} />
    <section class="articles__grid common-wrapper">
        <ul class="articles__grid__list flex row-wrap">
          {
            articles
                .filter(({ slug }) => slug !== featuredArticle.slug)
                .map((article, index) => {
                    return <li class="articles__grid__item">
                        <ArticleCard {...article} />
                        <script is:inline type="application/ld+json" set:html={JSON.stringify({
                          '@context': 'https://schema.org',
                          '@type': 'ItemList',
                          'itemListElement': {
                            '@type': 'ListItem',
                            'position': index + 2,
                            'url': new URL(`${Astro.url}/${article.slug}`, Astro.url).href,
                          },
                        })} />
                    </li>
                })}
        </ul>
    </section>
</BaseLayout>
