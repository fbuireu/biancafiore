---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { SITE_URL } from "astro:env/client";
import { PAGES_ROUTES } from '@const/index';
import ReadingProgress from "@modules/articles/components/readingProgress/ReadingProgress.astro";
import BaseLayout from "@modules/core/components/baseLayout/BaseLayout.astro";
import Breadcrumbs from "@modules/core/components/breadcrumbs/Breadcrumbs.astro";
import RelatedArticles from "@modules/core/components/relatedArticles/RelatedArticles.astro";
import ArticleDetails from '@modules/article/components/articleDetails/ArticleDetails.astro';
import type { InferGetStaticPropsType } from "astro";
import "./_article.css";

type ArticleProps = InferGetStaticPropsType<typeof getStaticPaths>;

export const prerender = true;

export async function getStaticPaths() {
	const articles = await getCollection("articles");

	return articles.map((article) => {
		return {
			params: {
				slug: article.data.slug,
			},
			props: {
				article,
			},
		};
	});
}

const { pathname } = Astro.url;
const { article } = Astro.props as ArticleProps;
const metadata = {
	...article,
	...(article.data.featuredImage && { image: article.data.featuredImage.url }),
};
---

<BaseLayout {...metadata}>
  {
      article.data.featuredImage && (
          <section class="article__featured__image__wrapper">
              <Image
                  src={article.data.featuredImage.url}
                  width={article.data.featuredImage.details.width}
                  height={article.data.featuredImage.details.height}
                  alt={article.data.title}
                  class="article__featured__image"
                  transition:name=`featured-image-${pathname}`
              />
          </section>
      )
  }
    <Breadcrumbs />
    <ReadingProgress />
    <ArticleDetails article={article} />
    <article class="article__wrapper" set:html={article.data.content} />
    <script is:inline type="application/ld+json" set:html={JSON.stringify({
      '@context': 'https://schema.org',
      '@type': 'Article',
      'headline': article.data.title,
      'description': article.data.description,
      ...(article.data.featuredImage && { 'image': article.data.featuredImage }),
      'datePublished': new Date(String(article.data.publishDate)).toISOString(),
      'dateModified': new Date(String(article.data.publishDate)).toISOString(),
      'author': {
        '@type': 'Person',
        'name': article.data.author.name,
        'jobTitle': article.data.author.jobTitle,
        'url': new URL(`${PAGES_ROUTES.ABOUT}`, SITE_URL),
      },
      'publisher': {
        'name': article.data.author.name,
        'url': new URL(SITE_URL),
      },
      'mainEntityOfPage': {
        '@type': 'WebPage',
        '@id': Astro.url.href,
      },
    })} />
    <RelatedArticles article={article} />
</BaseLayout>
