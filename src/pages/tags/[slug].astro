---
import { getCollection } from "astro:content";
import { ConfigurationTypes } from "@application/dto/article/articleDTO";
import { articleDTO } from "@application/dto/article/articleDTO";
import type { ArticleDTO } from "@application/dto/article/articleDTO";
import { tagDTO } from "@application/dto/tag/tagDTO";
import Breadcrumbs from "@components/molecules/breadcrumbs/Breadcrumbs.astro";
import ArticleCard from "@components/organisms/articleCard/ArticleCard.astro";
import BaseLayout from "@components/templates/baseLayout/BaseLayout.astro";
import type { InferGetStaticParamsType, InferGetStaticPropsType } from "astro";
import type { TagDTOItem } from "src/application/dto/tag";

export const prerender = true;

type TagProps = InferGetStaticPropsType<typeof getStaticPaths>;
type TagParams = InferGetStaticParamsType<typeof getStaticPaths>;

export async function getStaticPaths() {
	const articles: ArticleDTO[] = await Promise.all(
		(await getCollection("articles")).map((article) => articleDTO.render(article, { type: ConfigurationTypes.ASTRO })),
	);
	const tags = await tagDTO.render(articles);

	return Object.keys(tags).flatMap((letter) =>
		tags[letter].map((tag) => {
			return {
				params: {
					slug: tag.slug,
				},
				props: {
					tags,
				},
			};
		}),
	);
}

const { slug } = Astro.params as TagParams;
const { tags } = Astro.props as TagProps;

const currentTag: TagDTOItem = await Object.values(tags)
	.flat()
	.find((tag) => tag.slug === slug);
---
<BaseLayout>
    <Breadcrumbs />
    <h1>#{slug}</h1>
  
  {currentTag.articles?.map(({ slug, data: article }, index) => {
    const href = `/articles/${slug}`;
    const props = { ...article, href };

    return (
        <div>
            <ArticleCard {...props} />
            <script type="application/ld+json" set:html={JSON.stringify({
              '@context': 'https://schema.org',
              '@type': 'ItemList',
              'itemListElement': {
                '@type': 'ListItem',
                'position': index + 1,
                'url': new URL(`/articles/${slug}`, Astro.url).href,
              },
            })} />
        </div>
    );
  })}
</BaseLayout>
