---
import { getCollection } from "astro:content";
import { ConfigurationTypes } from "@application/dto/article/articleDTO";
import { articleDTO } from "@application/dto/article/articleDTO";
import type { ArticleDTO } from "@application/dto/article/articleDTO";
import { tagDTO } from "@application/dto/tag/tagDTO";
import Breadcrumbs from "@components/molecules/breadcrumbs/Breadcrumbs.astro";
import ArticleCard from "@components/organisms/articleCard/ArticleCard.astro";
import BaseLayout from "@components/templates/baseLayout/BaseLayout.astro";
import type { InferGetStaticParamsType, InferGetStaticPropsType } from "astro";
import type { TagDTOItem } from "src/application/dto/tag";
import "./_tag.css";

export const prerender = true;

type TagProps = InferGetStaticPropsType<typeof getStaticPaths>;
type TagParams = InferGetStaticParamsType<typeof getStaticPaths>;

export async function getStaticPaths() {
	const articles: ArticleDTO[] = await articleDTO.render(await getCollection("articles"), {
		type: ConfigurationTypes.ASTRO,
	});
	const tags = await tagDTO.render(articles);

	return Object.keys(tags).flatMap((letter) =>
		tags[letter].map(({ slug }) => {
			return {
				params: {
					slug,
				},
				props: {
					tags,
				},
			};
		}),
	);
}

const { slug } = Astro.params as TagParams;
const { tags } = Astro.props as TagProps;

const currentTag: TagDTOItem = await Object.values(tags)
	.flat()
	.find((tag) => tag.slug === slug);
---
<BaseLayout>
    <Breadcrumbs />
    <h1 class="flex justify-center">#{slug}</h1>
    <section class="common-wrapper">
      <ul class="tag__article__list flex row-wrap justify-space-between">
        {currentTag.articles?.map(({ slug, data: article }, index) => {
          const href = `/articles/${slug}`;
          const props = { ...article, href };

          return (
              <li class="tag__article__item">
                  <ArticleCard {...props} />
                  <script type="application/ld+json" set:html={JSON.stringify({
                    '@context': 'https://schema.org',
                    '@type': 'ItemList',
                    'itemListElement': {
                      '@type': 'ListItem',
                      'position': index + 1,
                      'url': new URL(`/articles/${slug}`, Astro.url).href,
                    },
                  })} />
              </li>
          );
        })}
      </ul>
    </section>
</BaseLayout>
