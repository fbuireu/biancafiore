---
import { getArticlesByTag } from "src/ui/shared/application/utils/getArticlesByTag";
import { getCollection } from "astro:content";
import { articleDTO } from "@application/dto/article/articleDTO";
import type { ArticleDTO } from "@application/dto/article/articleDTO";
import { tagDTO } from "@application/dto/tag/tagDTO";
import BaseLayout from "@components/templates/baseLayout/BaseLayout.astro";
import Breadcrumbs from "@components/molecules/breadcrumbs/Breadcrumbs.astro";

const { tag } = Astro.params;

const articles: ArticleDTO[] = await Promise.all((await getCollection("articles")).map(articleDTO.render));
const tags = tagDTO.render(articles);
const currentTag = Object.values(tags)
	.flat()
	.find(({ slug }) => slug === tag);

const articlesBySlug = getArticlesByTag({ articles, currentTag });
---
<BaseLayout>
<Breadcrumbs />
  <h1>#{tag}</h1>

{articlesBySlug.map((article, index) => {
  return (
    <div>
      <h1>{article.data.title}</h1>
      <p>{article.data.description}</p>
        <script type="application/ld+json" set:html={JSON.stringify({
          "@context": "https://schema.org",
          "@type": "ItemList",
          "itemListElement": {
            "@type": "ListItem",
            "position": index +1,
            "url": new URL(`/articles/${article.slug}`, Astro.url).href
          }
        })}/>
    </div>
  );
  })}
</BaseLayout>
