---
import { getArticlesByAuthor } from "src/application/dto/author/utils/getArticlesByAuthor";

import { ConfigurationTypes } from "@application/dto/article/articleDTO";
import { getCollection } from "astro:content";
import { articleDTO } from "@application/dto/article/articleDTO";
import type { ArticleDTO } from "@application/dto/article/articleDTO";
import { tagDTO } from "@application/dto/tag/tagDTO";
import BaseLayout from "@components/templates/baseLayout/BaseLayout.astro";
import Breadcrumbs from "@components/molecules/breadcrumbs/Breadcrumbs.astro";
import ArticleCard from "@components/organisms/articleCard/ArticleCard.astro";

const { tag } = Astro.params;

const articles: ArticleDTO[] = await Promise.all(
	(await getCollection("articles")).map((article) => articleDTO.render(article, { type: ConfigurationTypes.ASTRO })),
);
const tags = await tagDTO.render(articles);
const currentTag = Object.values(tags)
	.flat()
	.find(({ slug }) => slug === tag);
---
<BaseLayout>
<Breadcrumbs />
  <h1>#{tag}</h1>

{currentTag.articles?.map(({ slug, data: article }, index) => {
  const href=`/articles/${slug}`;
  const props= {...article, href}

  return (
    <div>
      <ArticleCard {...props} />
        <script type="application/ld+json" set:html={JSON.stringify({
          "@context": "https://schema.org",
          "@type": "ItemList",
          "itemListElement": {
            "@type": "ListItem",
            "position": index + 1,
            "url": new URL(`/articles/${slug}`, Astro.url).href
          }
        })}/>
    </div>
  );
  })}
</BaseLayout>
