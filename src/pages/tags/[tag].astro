---
import { TagType } from '@application/dto/tag/tagDTO';
import { getCollection } from 'astro:content';
import { articleDTO } from '@application/dto/article/articleDTO';
import type { ArticleDTO } from '@application/dto/article/articleDTO';
import { tagDTO } from '@application/dto/tag/tagDTO';
import { deSlugify } from '@shared/ui/utils/deSlugify';
import BaseLayout from '@components/templates/baseLayout/BaseLayout.astro';
import Breadcrumbs from '@components/molecules/breadcrumbs/Breadcrumbs.astro';

const { tag } = Astro.params;

const articles: ArticleDTO[] = await Promise.all((await getCollection("articles")).map(articleDTO.render));
const tags = tagDTO.render(articles);
const currentTag = Object.values(tags).flat().find(({ name } )=> name === tag);
const articlesBySlug = articles.filter((article) : ArticleDTO[]=>{
  if (currentTag.type === TagType.AUTHOR) {
    return article.data.author.data.name.includes(deSlugify(currentTag.name))
  }
  return article.data.tags.includes(currentTag.name);
});
---
<BaseLayout>
<Breadcrumbs />
hello darkness my old friend #{tag}

{articlesBySlug.map(article => {
  return (
    <div>
      <h1>{article.data.title}</h1>
      <p>{article.data.description}</p>
    </div>
  );
  })}
</BaseLayout>