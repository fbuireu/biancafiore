---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { ArticleType } from "@application/dto/article/types";
import { getLocation } from "@modules/core/utils/getLocation";
import clsx from "clsx";
import { PAGES_ROUTES } from '@const/index';
import "./article-card.css";

type ArticleCardProps = CollectionEntry<"articles">;

const article = Astro.props as ArticleCardProps;
const { pathname } = Astro.url;
const origin = getLocation(Astro.url);
---

<a class="article__link-card" href={`${PAGES_ROUTES.ARTICLES}/${article.data.slug}`} aria-label={article.data.title}>{' '}</a>
<article
    class={clsx(
        'article__item',
        {
          '--default-variant': article.data.variant === ArticleType.DEFAULT,
          '--no-image-variant': article.data.variant === ArticleType.NO_IMAGE,
        },
        origin && `--is-${origin}`,
    )}
>
  {article.data.featuredImage && (
      <Image
          class="article__item__featured-image"
          src={article.data.featuredImage.url}
          width={article.data.featuredImage.details.width}
          height={article.data.featuredImage.details.height}
          alt={article.data.title}
          transition:name=`featured-image-${pathname}`
      />
  )}
    <time class="article__item__publish-date" datetime={article.data.publishDate}>
      {article.data.publishDate}
    </time>
    <h3 class="article__title font-serif inner-section-title">{article.data.title}</h3>
    <p class="article__author">
        by <a href={`${PAGES_ROUTES.TAGS}/${article.data.author.slug}`} class="underline-on-action">{article.data.author.name}</a>
    </p>
    <p class="article__excerpt">{article.data.description}</p>
    <p class="article__reading-time">{article.data.readingTime} min.</p>
    <ul class="article__tags__list flex">
      {article.data.tags?.map(({ slug, name }, index) => (
          <a class="article__tag__item underline-on-action" href={`${PAGES_ROUTES.TAGS}/${slug}`} style={`--inline-index: ${String(index)}`}>
              #{name}
          </a>
      ))}
    </ul>
</article>
