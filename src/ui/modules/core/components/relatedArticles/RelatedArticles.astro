---
import type { CollectionEntry } from "astro:content";
import { RelatedArticlesSlider } from "@modules/core/components/relatedArticles/atoms/relatedArticlesSlider";
import { getRelatedArticles } from "@modules/core/components/relatedArticles/utils/getRelatedArticles";
import "./related-articles.css";

interface RelatedArticleProps {
	article: CollectionEntry<"articles">;
}

const { article } = Astro.props as RelatedArticleProps;
const relatedArticles = await getRelatedArticles(article);
---
{
    relatedArticles.length > 0 && (
    <section class="related-articles__wrapper common-wrapper">
        <h2 class="related-articles__title section-title">You might also like</h2>
        <RelatedArticlesSlider client:only="react" articles={relatedArticles} />
        <script is:inline type="application/ld+json" set:html={JSON.stringify({
          '@context': 'https://schema.org',
          '@type': 'ItemList',
          'itemListElement': relatedArticles.map(({ data: { slug } }, index) => ({
            '@type': 'ListItem',
            'position': index + 1,
            'url': new URL(slug, Astro.url).href,
          })),
        })} />
    </section>
        )
    }
