---
import { articleDTO } from "@application/dto/article";
import type { RawArticle } from "@application/dto/article/types";
import { client } from "@infrastructure/cms/client";
import { LatestArticlesSlider } from "./atoms/latestArticlesSlider/LatestArticlesSlider.tsx";
import "./latest-articles.css";

interface LatestArticlesProps {
	limit?: number;
}

const MAX_ARTICLES = 4;

const { limit = MAX_ARTICLES } = Astro.props as LatestArticlesProps;

const { items: rawArticles } = await client.getEntries<RawArticle>({
	content_type: "article",
	order: ["-fields.publishDate"],
});
const articles = articleDTO.render(rawArticles as RawArticle[]).splice(0, limit);
---

<section class="latest-articles__wrapper">
  <h3 class="latest-articles__title section-title">
    Fresh from <a class="latest-articles__title__link clickable" href="/articles">the blog</a>
  </h3>
  <LatestArticlesSlider client:load articles={articles} origin={Astro.url} />
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "ItemList",
    "itemListElement": articles.map(({ slug }, index) => ({
      "@type": "ListItem",
      "position": index + 1,
      "url": new URL(slug, Astro.url).href
    }))
  })}/>
</section>
