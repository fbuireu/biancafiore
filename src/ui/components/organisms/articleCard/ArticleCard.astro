---
import type { ArticleDTO } from "@application/dto/article/types";
import { ArticleType } from "@application/dto/article/types";
import clsx from "clsx";
import { getLocation } from "./utils/getLocation";
import "./article-card.css";

type ArticleCardProps = {
	origin: URL;
	children: React.ReactNode;
	href: string;
} & ArticleDTO;

const { href, title, description, variant, featuredImage, publishDate, author, tags } = Astro.props as ArticleCardProps;

const { pathname } = Astro.url;
const origin = getLocation(Astro.url);
---

<a class="article__link-card" href={href} aria-label={title}>{" "}</a>
<article
    class={clsx(
        'article__item',
        {
          '--default-variant': variant === ArticleType.DEFAULT,
          '--no-image-variant': variant === ArticleType.NO_IMAGE,
        },
        origin && `--is-${origin}`,
    )}
>
  {featuredImage && (
      <img
          class="article__item__featured-image"
          src={featuredImage}
          alt={title}
          decoding="async"
          loading="lazy"
          transition:name=`featured-image-${pathname}`
      />
  )}
    <time class="article__item__publish-date" dateTime={publishDate}>
      {publishDate}
    </time>
    <h3 class="article__title font-serif inner-section-title">{title}</h3>
    <p class="article__author">
        by <a href={`/tags/${author.slug}`}>{author.name}</a>
    </p>
    <p class="article__excerpt">{description}</p>
    <ul class="article__tags__list flex">
      {tags?.map(({slug, name}) => (
          <a class="article__tag__item" href={`/tags/${slug}`}>
              #{name}
          </a>
      ))}
    </ul>
</article>
